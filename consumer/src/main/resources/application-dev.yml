spring:
  application:
    name: consumer
  elasticsearch:
    rest:
      uris: 127.0.0.1:9200
  kafka:
    # kafka连接接地址
    bootstrap-servers: 127.0.0.1:9092
    # 生产者配置
    producer:
      # 序列化key的类
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 序列化value的类
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    # 消费者配置
    consumer:
      # 反序列化key的类
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 反序列化value的类
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      # 消费者所属消息组
#      group-id: testGroup
#      # 从头开始消费，配合不同的group id
#      auto-offset-reset: earliest
#      # 表示接受反序列化任意的类，也可限定包路径
#      properties:
#        spring:
#          json:
#            trusted:
#              packages: '*'

server:
  port: 8091

dubbo:
  application:
    name: dubbo-consumer
  registry:
    protocol: zookeeper
    address: 127.0.0.1:2181
#  protocol:
#    name: dubbo
#    port: 20880
#  monitor:
#    protocol: registry

logging:
  config: classpath:log4j2.xml

